						<h1>GET /api</h1>
						<p>Serves an HTML page with documentation for all the available endpoints (this page!)</p>
						
						<h1>GET /api/topics</h1>
						<p>Get all the topics</p>
						
						<h1>GET /api/topics/:topic_slug/articles</h1>
						<p>Return all the articles for a certain topic, e.g. '/api/topics/football/articles'</p>
						
						<h1>POST /api/topics/:topic_slug/articles</h1>
						<p>Add a new article to a topic. This route requires a JSON body with title and body key value pairs
						
							E.g: '{ "title": "new article", "body": "This is my new article content", "created_by": "user_id goes here"}'
						</p>
						
						<h1>GET /api/articles</h1>
						<p>Returns all the articles</p>
						
						
						<h1>GET /api/articles/:article_id</h1>
						<p>Get an individual article</p>
						
						<h1>GET /api/articles/:article_id/comments</h1>
						<p>Get all the comments for an individual article</p>
						
						<h1>POST /api/articles/:article_id/comments</h1>
						<p>Add a new comment to an article. This route requires a JSON body ***** with body and created_by key value pairs
						
							e.g: `{"body": "This is my new comment", "created_by": "user_id goes here"}`
						</p>
						
						<h1>PATCH /api/articles/:article_id</h1>
						<p>Increment or Decrement the votes of an article by one. This route requires a vote query of 'up' or 'down'
						
							e.g: '/api/articles/:article_id?vote=up'
						</p>
						
						<h1>PATCH /api/comments/:comment_id</h1>
						<p>Incremement or Decrement the votes of a comment by one. This route requires a vote query of 'up' or 'down'
						
							e.g: '/api/comments/:comment_id?vote=down'
						</p>
						
						
						<h1>DELETE /api/comments/:comment_id</h1>
						<p>Deletes a comment by ID</p>
						
						<h1>GET /api/users/:username</h1>
						<p>e.g: '/api/users/mitch123'
						
							Returns a JSON object with the profile data for the specified user.